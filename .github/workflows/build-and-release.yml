name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  build-and-release:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Build executable
      run: |
        python build_executable.py
        
    - name: Create release package
      run: |
        # Create versioned release directory
        $version = if ($env:GITHUB_REF -match 'refs/tags/(.+)') { $matches[1] } else { $env:INPUT_VERSION }
        $releaseDir = "release-$version"
        New-Item -ItemType Directory -Path $releaseDir
        
        # Copy files to release directory
        Copy-Item "dist/DevServerManager.exe" "$releaseDir/"
        Copy-Item "release/README.md" "$releaseDir/"
        Copy-Item "release/PANDUAN_PENGGUNAAN.txt" "$releaseDir/"
        Copy-Item "release/requirements.txt" "$releaseDir/"
        Copy-Item "release/server_config_example.json" "$releaseDir/"
        Copy-Item "release/server_templates.json" "$releaseDir/"
        
        # Create ZIP package
        Compress-Archive -Path "$releaseDir/*" -DestinationPath "DevServerManager-$version-Windows.zip"
        
        # Set output for next step
        echo "RELEASE_VERSION=$version" >> $env:GITHUB_OUTPUT
        echo "ZIP_FILE=DevServerManager-$version-Windows.zip" >> $env:GITHUB_OUTPUT
        
    - name: Upload release artifacts
      uses: actions/upload-artifact@v3
      with:
        name: release-files
        path: |
          DevServerManager-*-Windows.zip
          release-*/
          
    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          DevServerManager-*-Windows.zip
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Create Manual Release
      if: github.event_name == 'workflow_dispatch'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.event.inputs.version }}
        files: |
          DevServerManager-*-Windows.zip
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
